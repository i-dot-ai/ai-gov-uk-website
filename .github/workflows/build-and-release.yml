on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      commit_hash:
        required: true
        type: string
      destination_bucket:
        required: true
        type: string


jobs:
  set-vars:
    runs-on: ubuntu-latest
    outputs:
      app-name: ${{ steps.export.outputs.app-name }}
      ec2-instance-type: ${{ steps.export.outputs.ec2-instance-type }}
      version: ${{ steps.export.outputs.version }}
      runner-size: ${{ steps.export.outputs.runner-size }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: main

    - id: export
      run: |
        cd main
        . ./.github/.github.env
        echo "ec2-instance-type=${EC2_INSTANCE_TYPE}" >> $GITHUB_OUTPUT
        echo "app-name=${APP_NAME}" >> $GITHUB_OUTPUT
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "runner-size=${RUNNER_SIZE}" >> $GITHUB_OUTPUT

  start-runner:
    uses: i-dot-ai/i-dot-ai-core-github-actions/.github/workflows/start-runner.yml@main
    needs: set-vars
    with:
      EC2_INSTANCE_TYPE: ${{ needs.set-vars.outputs.ec2-instance-type }}
      RUNNER_SIZE: ${{ needs.set-vars.outputs.runner-size }}
      ENVIRONMENT: ${{ inputs.environment }}
    secrets:
      AWS_GITHUBRUNNER_USER_ACCESS_KEY: ${{ secrets.AWS_GITHUBRUNNER_USER_ACCESS_KEY }}
      AWS_GITHUBRUNNER_USER_SECRET_ID: ${{ secrets.AWS_GITHUBRUNNER_USER_SECRET_ID }}
      AWS_GITHUBRUNNER_PAT: ${{ secrets.AWS_GITHUBRUNNER_PAT }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

  publish-website:
    runs-on: ${{ needs.start-runner.outputs.label }}
    needs:
      - set-vars
      - start-runner
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.commit_hash }}

      - name: Install NPM
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Create .env
        run: |
          echo CONTENTFUL_SPACE="${{ secrets.CONTENTFUL_SPACE }}" >> .env
          echo CONTENTFUL_ACCESS_TOKEN="${{ secrets.CONTENTFUL_ACCESS_TOKEN }}" >> .env
          echo GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" >> .env
          if [[ ${{ inputs.environment }} != "prod" ]]; then
            echo PREVIEW_ACCESS_TOKEN="${{ secrets.PREVIEW_ACCESS_TOKEN }}" >> .env
          fi
      
      - name: NPM clean install
        run: npm ci

      - name: NPM build
        run: npm run build --if-present

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: NPM run tests
        run: |
          npx playwright test
        
      - name: Copy built _site folder to s3
        run: |
          cd _site 
          aws s3 cp . s3://${{ secrets[inputs.destination_bucket] }}/ --recursive

  determine-success:
    needs:
      - set-vars
      - start-runner
      - publish-website
    runs-on: ${{ needs.start-runner.outputs.label }}
    if: always()
    outputs:
      success: ${{ steps.success.outputs.success }}
    steps:
      - id: success
        run: | 
          if [[ "${{ needs.publish-website.result }}" == "success" ]]; then
              echo "success=true" >> $GITHUB_OUTPUT
          else
              echo "success=false" >> $GITHUB_OUTPUT
          fi

  notify-slack:
    uses: i-dot-ai/i-dot-ai-core-github-actions/.github/workflows/slack-notify.yml@main
    needs:
      - set-vars
      - start-runner
      - publish-website
      - determine-success
    with:
      RUNNER_LABEL: ${{ needs.start-runner.outputs.label }}
      WORKFLOW_PASSED: ${{ needs.determine-success.outputs.success == 'true' }}
      SUCCESS_PAYLOAD: "{\"text\": \"Deployment succeeded to ${{ inputs.environment }} :airplane:\", \"blocks\": [{\"type\": \"header\",\"text\": {\"type\": \"plain_text\",\"text\": \"Deployed main to ai gov uk website :hype-elmo:\"}}]}"
      FAILURE_PAYLOAD: "{\"text\": \"Failed to deploy to ${{ inputs.environment }}\",\"blocks\": [{\"type\": \"header\",\"text\": {\"type\": \"plain_text\",\"text\": \"Failed to deploy main to the ai gov uk website :aaaaaaaaaa:\"}}]}"
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  stop-runner:
    uses: i-dot-ai/i-dot-ai-core-github-actions/.github/workflows/stop-runner.yml@main
    if: needs.start-runner.outputs.use-persisted == 0 && always()
    needs:
      - set-vars
      - start-runner
      - publish-website
      - determine-success
      - notify-slack
    with:
      RUNNER_LABEL: ${{ needs.start-runner.outputs.label }}
      EC2_INSTANCE_ID: ${{ needs.start-runner.outputs.ec2-instance-id }}
    secrets:
      AWS_GITHUBRUNNER_USER_ACCESS_KEY: ${{ secrets.AWS_GITHUBRUNNER_USER_ACCESS_KEY }}
      AWS_GITHUBRUNNER_USER_SECRET_ID: ${{ secrets.AWS_GITHUBRUNNER_USER_SECRET_ID }}
      AWS_GITHUBRUNNER_PAT: ${{ secrets.AWS_GITHUBRUNNER_PAT}}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      